@model MyFormixApp.UI.ViewModels.HomeViewModel
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["HomePageTitle"];
}

<div class="hero-section bg-light py-5 mb-5">
    <div class="container text-center">
        <h1 class="display-4">@Localizer["WelcomeTitle"]</h1>
        <p class="lead">@Localizer["WelcomeSubtitle"]</p>
        <a href="/Templates/Create" class="btn btn-primary btn-lg">@Localizer["CreateTemplate"]</a>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white border-bottom-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="h4 mb-0"><i class="fas fa-file-alt text-primary me-2"></i> @Localizer["RecentTemplates"]</h2>
                        <div class="input-group w-50">
                            <input type="text" id="titleSearchInput" class="form-control" placeholder="@Localizer["SearchTemplates"]">
                            <button class="btn btn-outline-primary" type="button" onclick="searchByTitle()">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div id="templateContainer">
                        @if (Model.RecentTemplates?.Any() == true)
                        {
                            <div class="row row-cols-1 row-cols-md-2 g-4">
                                @foreach (var template in Model.RecentTemplates)
                                {
                                    <div class="col">
                                        <div class="card h-100 border-0 shadow-sm">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <h5 class="card-title mb-0">@template.Title</h5>
                                                </div>
                                                <p class="card-text text-muted">@(template.Description?.Length > 100 ? template.Description.Substring(0, 100) + "..." : template.Description)</p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <a href="/TemplateViews/View/@template.Id" class="btn btn-sm btn-outline-primary">
                                                        @Localizer["ViewTemplate"] <i class="fas fa-arrow-right ms-1"></i>
                                                    </a>
                                                    @if (template.Author != null)
                                                    {
                                                        <small class="text-muted">
                                                            <i class="fas fa-user me-1"></i> @template.Author.Username
                                                        </small>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                            @if (Model.TotalPages > 1)
                            {
                                <nav aria-label="Templates pagination">
                                    <ul class="pagination justify-content-center mt-4">
                                        @for (int i = 1; i <= Model.TotalPages; i++)
                                        {
                                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            }
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="fas fa-file-alt fa-4x text-muted mb-3"></i>
                                <h4 class="text-muted">@Localizer["NoTemplatesTitle"]</h4>
                                <p class="text-muted">@Localizer["NoTemplatesSubtitle"]</p>
                                <a href="/Templates/Create" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i> @Localizer["CreateTemplate"]
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h3 class="h5 mb-0"><i class="fas fa-tags text-primary me-2"></i> @Localizer["PopularTags"]</h3>
                </div>
                <div class="card-body">
                    <div class="input-group mb-3">
                        <input type="text" id="tagSearchInput" class="form-control" placeholder="@Localizer["SearchByTag"]">
                        <button class="btn btn-outline-primary" type="button" onclick="searchByTag()">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    @if (Model.PopularTags?.Any() == true)
                    {
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var tag in Model.PopularTags)
                            {
                                <a href="#" class="badge bg-light text-dark text-decoration-none py-2 px-3" onclick="searchByTag('@tag.Name')">
                                    #@tag.Name
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-tag fa-2x text-muted mb-2"></i>
                            <p class="text-muted mb-0">@Localizer["NoTagsYet"]</p>
                        </div>
                    }
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h3 class="h5 mb-0"><i class="fas fa-star text-primary me-2"></i> @Localizer["TopTemplates"]</h3>
                </div>
                @if (Model.TopTemplates?.Any() == true)
                {
                    <div class="list-group list-group-flush">
                        @foreach (var template in Model.TopTemplates)
                        {
                            <a href="/TemplateViews/View/@template.Id" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                <span>@template.Title</span>
                                <span class="badge bg-primary rounded-pill">
                                    <i class="fas fa-heart me-1"></i> @template.LikesCount
                                </span>
                            </a>
                        }
                    </div>
                }
                else
                {
                    <div class="card-body text-center py-3">
                        <i class="fas fa-star fa-2x text-muted mb-2"></i>
                        <p class="text-muted mb-0">@Localizer["NoTopTemplates"]</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        function searchByTag(tag = null) {
            const term = tag || document.getElementById('tagSearchInput').value.trim();
            if (!term) return;

            fetch(`/TemplateSearch/SearchByTag?tag=${encodeURIComponent(term)}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('templateContainer').innerHTML = html;
                })
                .catch(error => console.error('Search failed:', error));
        }

        function searchByTitle() {
            const title = document.getElementById('titleSearchInput').value.trim();
            if (!title) return;

            fetch(`/TemplateSearch/SearchByTitle?title=${encodeURIComponent(title)}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById('templateContainer').innerHTML = html;
                })
                .catch(error => console.error('Search failed:', error));
        }
    </script>
}